@page "/register"
@using DTOs
@using EcoUme.Components.Layout
@layout NoNavbar
@inject EcoUme.Services.IUsersService UsersService
@inject NavigationManager Navigation

<link href="css/loginRegi.css" rel="stylesheet" />

<div class="registration-container">
    <div class="form-header">
        <img src="images/full plum color.webp" alt="EcoUme Logo" class="logo" />
        <h1>Registration</h1>
        <p>Please complete the following form to register on our site. Thanks.</p>
    </div>

    @if (!string.IsNullOrEmpty(message))
    {
        <p class="@messageClass">@message</p>
    }

    <EditForm Model="registerModel" OnValidSubmit="HandleRegistration" class="registration-form">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-row">
            <div class="form-group">
                <label for="firstname">First Name</label>
                <InputText id="firstname" @bind-Value="registerModel.Firstname" class="form-control" />
            </div>
            <div class="form-group">
                <label for="lastname">Last Name</label>
                <InputText id="lastname" @bind-Value="registerModel.Lastname" class="form-control" />
            </div>
        </div>

        <div class="form-row">
            <div class="form-group">
                <label for="email">Enter Email</label>
                <InputText id="email" @bind-Value="registerModel.Email" class="form-control" />
            </div>
            <div class="form-group">
                <label for="confirmEmail">Confirm Email</label>
                <InputText id="confirmEmail" @bind-Value="registerModel.ConfirmEmail" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            <label for="username">Username</label>
            <InputText id="username" @bind-Value="registerModel.Username" class="form-control" />
        </div>

        <div class="form-row">
            <div class="form-group">
                <label for="password">Enter Password</label>
                <InputText id="password" @bind-Value="registerModel.Password" type="password" class="form-control" />
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirm Password</label>
                <InputText id="confirmPassword" @bind-Value="registerModel.ConfirmPassword" type="password" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-submit">Submit</button>
        </div>
    </EditForm>
</div>

@code {
    private CreateUserDTO registerModel = new CreateUserDTO();
    private string message = string.Empty;
    private string messageClass = "success"; // Default to success

    private async Task HandleRegistration()
    {
        try
        {
            await UsersService.CreateUserAsync(registerModel);
            message = "Registration successful! Redirecting to login...";
            messageClass = "success";
            await Task.Delay(2000); // Optional delay for user to read the message
            Navigation.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            message = $"Registration failed: {ex.Message}";
            messageClass = "error";
        }
    }
}